name: Deploy to ECS

on:
  workflow_run:
    workflows: ["Build and Push Docker Images"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set short SHA
        id: vars
        run: echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV

      - name: Deploy Patient Service
        run: |
          aws ecs describe-task-definition --task-definition hcl-bayer-patient-task-dev --query 'taskDefinition' --output json > taskdef.json

          # Remove all read-only or unsupported fields
          jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' taskdef.json > cleaned_taskdef.json

          # Inject new image
          jq --arg IMAGE "${{ secrets.ECR_REGISTRY }}/hcl-bayer-patient_ecr-dev:${SHORT_SHA}" '.containerDefinitions[0].image = $IMAGE' cleaned_taskdef.json > updated_taskdef.json

          NEW_TASK_ARN=$(aws ecs register-task-definition --cli-input-json file://updated_taskdef.json --query 'taskDefinition.taskDefinitionArn' --output text)

          aws ecs update-service \
            --cluster hcl-bayer-ecs-cluster-dev \
            --service hcl-bayer-patient-service-dev \
            --task-definition $NEW_TASK_ARN

      - name: Deploy Appointment Service
        run: |
          aws ecs describe-task-definition --task-definition hcl-bayer-appointment-task-dev --query 'taskDefinition' --output json > taskdef.json

          # Remove all read-only or unsupported fields
          jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' taskdef.json > cleaned_taskdef.json

          # Inject new image
          jq --arg IMAGE "${{ secrets.ECR_REGISTRY }}/hcl-bayer-appointment_ecr-dev:${SHORT_SHA}" '.containerDefinitions[0].image = $IMAGE' cleaned_taskdef.json > updated_taskdef.json
          NEW_TASK_ARN=$(aws ecs register-task-definition --cli-input-json file://updated_taskdef.json --query 'taskDefinition.taskDefinitionArn' --output text)

          aws ecs update-service \
            --cluster hcl-bayer-ecs-cluster-dev \
            --service hcl-bayer-appointment-service-dev \
            --task-definition $NEW_TASK_ARN
